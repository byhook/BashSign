                              README

                Java(TM) Platform, Standard Edition
                        Runtime Environment
                             Version 6

For use with the Operating System Distributor License for Java (DLJ)

The Java(TM) Platform, Standard Edition Runtime Environment (JRE) 
contains the Java virtual machine, runtime class libraries, and Java 
application launcher that are necessary to run programs written in the 
Java programming language. It is not a development environment and does 
not contain development tools such as compilers or debuggers.  For 
development tools, see the Java SE Development Kit (JDK(TM)).

The DLJ allows for redistribution of just the Java(TM) Runtime Environmentz
with your Operating System, in accordance with its conditions and
restrictions.

=======================================================================
      Redistribution of the Java SE Runtime Environment (JRE)
=======================================================================

    --------------------------------------------------------
    NOTE - The license for this software does not allow the
    redistribution of beta and other pre-release versions.
    --------------------------------------------------------

Reproduction and distribution of the Software (and also portions of
Software identified below as Redistributable) is subject to the terms
and conditions of the Operating System Distributor License for Java
(DLJ) and the obligations, restrictions, and exceptions set forth below.

The term "vendors" used here refers to licensees, developers, and
independent software vendors (ISVs) who license and distribute the
Java SE Runtime Environment with their Operating System.

Vendors must follow the terms of the Operating System Distributor
License for Java. More information about how to successfully package
and check your distribution of the JRE can be found at:

    https://jdk-distros.dev.java.net

-----------------------------------------------------------------------
Creating a JRE file set from a JDK distribution
-----------------------------------------------------------------------

Refer to the instructions in the JDK README for creating a correct JRE
file set. These instructions are in the "Redistribution" section in a
subsection called "Redistributing the Java(TM) Runtime Environment
(JRE)."  Once you have a correct JRE file set, you may customize it
according to the instructions below.

-----------------------------------------------------------------------
Required vs. Optional Files
-----------------------------------------------------------------------

The files that make up the Java SE Runtime Environment are divided into
two categories: required and optional.  Optional files may be excluded
from redistributions of the Java SE Runtime Environment at the
vendor's discretion.

The following section contains a list of the files and directories that
may optionally be omitted from redistributions with the Java SE Runtime
Environment.  All files not in these lists of optional files must be
included in redistributions of the runtime environment.

-----------------------------------------------------------------------
Optional Files and Directories
-----------------------------------------------------------------------

The following files may be optionally excluded from redistributions.
These files are located in the jre1.6.0_<version> directory, where
<version> is the update version number.  Solaris and Linux filenames
and separators are shown. Corresponding files with _g in the name can 
also be excluded. The corresponding man pages should be excluded for 
any excluded executables (with paths listed below beginning with bin/ ). 

    lib/charsets.jar
        Character conversion classes
    lib/ext/
        sunjce_provider.jar - the SunJCE provider for Java
          Cryptography APIs
        localedata.jar - contains many of the resources
          needed for non US English locales
        ldapsec.jar - contains security features supported
          by the LDAP service provider
        dnsns.jar - for the InetAddress wrapper of JNDI DNS provider
    bin/rmid
        Java RMI Activation System Daemon
    bin/rmiregistry
        Java Remote Object Registry
    bin/tnameserv
        Java IDL Name Server
    bin/keytool
        Key and Certificate Management Tool
    bin/policytool
        Policy File Creation and Management Tool
    bin/orbd
        Object Request Broker Daemon
    bin/servertool
        Java IDL Server Tool
    bin/javaws, lib/javaws/ and lib/javaws.jar
        Java Web Start

-----------------------------------------------------------------------
Redistributable JDK(TM) Files
-----------------------------------------------------------------------

The limited set of files from the Java SE Development Kit (JDK)
listed below may be included in vendor redistributions of the Java SE 
Runtime Environment.  All paths are relative to the top-level
directory of the JDK. The corresponding man pages should be included for
any included executables (with paths listed below beginning with bin/ ). 

    jre/lib/cmm/PYCC.pf
        Color profile.  This file is required only if one wishes to
        convert between the PYCC color space and another color space.

    All .ttf font files in the jre/lib/fonts directory. 
        Note that the LucidaSansRegular.ttf font is already contained 
        in the Java SE Runtime Environment, so there is no need to 
        bring that file over from the JDK.

    jre/lib/audio/soundbank.gm
        This MIDI soundbank is present in the JDK, but it has
        been removed from the Java SE Runtime Environment in order to
        reduce the size of the Runtime Environment's download bundle.
        However, a soundbank file is necessary for MIDI playback, and
        therefore the JDK's soundbank.gm file may be included in
        redistributions of the Runtime Environment at the vendor's
        discretion. Several versions of enhanced MIDI soundbanks are
        available from the Java Sound web site:
        http://java.sun.com/products/java-media/sound/
        These alternative soundbanks may be included in redistributions
        of the Java SE Runtime Environment.

    The javac bytecode compiler, consisting of the following files:
        bin/javac           [Solaris(TM) Operating System
                             and Linux]
        bin/sparcv9/javac   [Solaris Operating System
                             (SPARC(R) Platform Edition)]
        bin/amd64/javac     [Solaris Operating System (AMD)]
        lib/tools.jar       [All platforms]

    The Annotation Processing Tool, consisting of the following files:
        bin/apt             [Solaris(TM) Operating System
                             and Linux]
        bin/sparcv9/apt     [Solaris Operating System
                             (SPARC(R) Platform Edition)]
        bin/amd64/apt       [Solaris Operating System (AMD)]
 
    lib/jconsole.jar
        The Jconsole application.

-----------------------------------------------------------------------
Relocatable Files
-----------------------------------------------------------------------

In order to conform with the guidelines of your OS distribution, you 
may move files contained within the JRE distribution to locations 
outside of the Java directory hierarchy which is represented by the 
top-level directory of the JRE as long as you meet the following 
requirements: you must create symbolic links at the standard location 
for each file within the Java directory hierarchy pointing its new 
location; the resulting installation must run properly on your 
operating system.

-----------------------------------------------------------------------
Modifiable Configuration Files
-----------------------------------------------------------------------

The limited set of files from the JRE listed below may be modified in 
Operating System Distributions for the purpose of configuring the 
Software to work properly with your Operating System Distribution 
(These paths are all relative to <java-home> where <java-home> is 
the jre directory of the JDK or the top-level directory of the JRE):

lib/<arch>/jvm.cfg (where <arch> is i386, amd64, sparc or sparcv9)
    Please refer to: http://java.sun.com/docs/hotspot/PerformanceFAQ.html#9 
lib/security/cacerts
    Please see the section below: The cacerts Certificates File 
lib/security/java.security
    Please refer to:   
    http://java.sun.com/javase/6/docs/technotes/guides/security/
lib/security/java.policy
    Please refer to:  
    http://java.sun.com/javase/6/docs/technotes/guides/security/
lib/fontconfig.properties
    Please refer to: 
    http://java.sun.com/javase/6/docs/technotes/guides/intl/fontconfig.html
lib/sound.properties
    Please refer to:    
    http://java.sun.com/javase/6/docs/technotes/guides/sound/programmer_guide/contents.html
lib/psfontj2d.properties (Note: relocation only) 
lib/net.properties
    Please refer to:  
    http://java.sun.com/javase/6/docs/technotes/guides/net/proxies.html
lib/logging.properties
    Please refer to: 
    http://java.sun.com/javase/6/docs/technotes/guides/logging/index.html
lib/flavormap.properties
    Please refer to: 
    http://java.sun.com/javase/6/docs/technotes/guides/dragndrop/spec/dnd1.html
lib/content-types.properties
    Please refer to:    
    http://java.sun.com/javase/6/docs/api/java/net/URLConnection.html
lib/deployment.config (Note: this file is not present by default)
    Please refer to: 
    http://java.sun.com/javase/6/docs/technotes/guides/deployment/deployment-guide/properties.html

-----------------------------------------------------------------------
Distributor Native Packaging
-----------------------------------------------------------------------

Redistributors are encouraged to provide the JRE in the native
distribution packaging format and repository mechanism. The JRE may be
split into multiple packages (for example, architecture independent
and architecture dependent) with interdependencies as long as
installing the software (using conventional administration commands
or documentation provided by the distributor) results in a JRE 
installation that adheres to the requirements in this README.

-----------------------------------------------------------------------
Unlimited Strength Java Cryptography Extension
-----------------------------------------------------------------------

Due to import control restrictions for some countries, the Java
Cryptography Extension (JCE) policy files shipped with the Java SE
Development Kit and the Java SE Runtime Environment allow strong but
limited cryptography to be used.  These files are located at

    <java-home>/lib/security/local_policy.jar
    <java-home>/lib/security/US_export_policy.jar

where <java-home> is the jre directory of the JDK or the
top-level directory of the Java SE Runtime Environment.

An unlimited strength version of these files indicating no restrictions
on cryptographic strengths is available on the JDK web site for
those living in eligible countries.  Those living in eligible countries
may download the unlimited strength version and replace the strong
cryptography jar files with the unlimited strength files.

-----------------------------------------------------------------------
The cacerts Certificates File
-----------------------------------------------------------------------

Root CA certificates may be added to or removed from the Java SE
certificate file located at 

    <java-home>/lib/security/cacerts

For more information, see The cacerts Certificates File section
in the keytool documentation at:

http://java.sun.com/javase/6/docs/tooldocs/solaris/keytool.html#cacerts

-----------------------------------------------------------------------
Updates to the README File
-----------------------------------------------------------------------

We intend to regularly revise this README to be more precise about how 
to redistribute the JRE. For questions about redistribution which are 
not answered in the README please post a question in the jdk-distros 
forum:

   http://forums.java.net/jive/forum.jspa?forumID=94

or send e-mail to DLJfeedback@sun.com

=======================================================================
Endorsed Standards Override Mechanism
=======================================================================

From time to time it is necessary to update the Java platform in order
to incorporate newer versions of standards that are created outside of
the Java Community Process(SM) (JCP(SM) http://www.jcp.org/) (Endorsed
Standards), or in order to update the version of a technology included
in the platform to correspond to a later standalone version of that
technology (Standalone Technologies).

The Endorsed Standards Override Mechanism provides a means whereby
later versions of classes and interfaces that implement Endorsed
Standards or Standalone Technologies may be incorporated into the Java
Platform.

For more information on the Endorsed Standards Override Mechanism,
including the list of platform packages that it may be used to
override, see

    http://java.sun.com/javase/6/docs/technotes/guides/standards/ 

-----------------------------------------------------------------------
The Java(TM) Runtime Environment (JRE) is a product of 
Sun Microsystems(TM), Inc.

Copyright © 2006 Sun Microsystems, Inc.
4150 Network Circle, Santa Clara, California 95054, U.S.A.
All rights reserved.
